- hosts: all
  become: true
  vars_files:
    - vars/default.yml
  tasks:
    - name: create personal group
      group:
        name: "{{ user }}"
      tags: ['install']
      when: ansible_env.SETUP_USERNAME is defined
    - name: create personal user
      user:
        name: "{{ user }}"
        password: "{{ password }}"
        group: "{{ user }}"
        groups: wheel
        shell: /bin/zsh
      tags: ['install']
      when: ansible_env.SETUP_USERNAME is defined
    - name: check if dotfiles are in place
      stat:
        path: "/home/{{ user }}/dots"
      register: dots
    - name: create aur management user
      user:
        name: aur_user
        group: wheel
        home: /var/lib/aurman
        system: yes
        shell: /bin/nologin
      tags: ['install']
      when: ansible_distribution == "Archlinux"
    - name: clone dotfiles
      git:
        repo: https://github.com/BasLangenberg/dots.git
        dest: "/home/{{ user }}/dots"
      when: dots.stat.isdir is not defined
    - name: update permissions
      file:
        path: "/home/{{ user }}/dots"
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: true
      when: dots.stat.isdir is not defined
    - name: setup ranger folder
      file:
        path: "/home/{{ user }}/.config/ranger"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: directory
        mode: 0755
    - name: setup sudo for wheel group
      lineinfile:
        path: /etc/sudoers
        state: present
        line: "%wheel ALL=(ALL) ALL"
        regexp: "^%wheel ALL="
      tags: ['install']
      when: ansible_distribution == "Archlinux"
    - name: setup sudo for aur user
      lineinfile:
        path: /etc/sudoers
        state: present
        line: "aur_user ALL=(ALL) NOPASSWD: ALL"
        regexp: "^aur_user ALL="
      tags: ['install']
      when: ansible_distribution == "Archlinux"
    - name: import arch linux setup
      import_tasks: arch.yml
      when: ansible_distribution == "Archlinux"
    - name: link ranger config
      file:
        src: "/home/{{ user }}/dots/files/ranger_rc.conf"
        path: "/home/{{ user }}/.config/ranger/rc.conf"
        state: link
        owner: "{{ user }}"
        group: "{{ user }}"
    - name: link .config directories
      file:
        src: "/home/{{ user }}/dots/files/{{ item }}"
        path: "/home/{{ user }}/.config/{{ item }}"
        state: link
        owner: "{{ user }}"
        group: "{{ user }}"
      with_items:
        - wal
        - polybar
    - name: clone powerlevel10k
      git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "/home/{{ user }}/powerlevel10k"
    - name : p10k - fix permissions
      file:
        path: "/home/{{ user }}/powerlevel10k"
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: true
    - name: link dotfiles
      file:
        src: "/home/{{ user }}/dots/files/{{ item }}"
        path: "/home/{{ user }}/{{ item }}"
        state: link
        owner: "{{ user }}"
        group: "{{ user }}"
      with_items:
        - .zshrc
        - .tmux.conf
        - .vim
        - .gitconfig
    - name: Clone fzf
      git:
        repo: https://github.com/junegunn/fzf.git
        dest: "/home/{{ user }}/.fzf"
    - name: fzf - fix permissions 
      file:
        path: "/home/{{ user }}/.fzf"
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: true
    - name : Install fzf
      command:
        cmd: "/home/{{ user }}/.fzf/install"
        creates: "/home/{{ user }}/.fzf/bin/fzf"
